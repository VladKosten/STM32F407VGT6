{
	"name": "EmbeddedARM",
	"build": {
		"dockerfile": "Dockerfile"
	},
	//An array of Docker CLI arguments that should be used when running the container. Defaults to []. For example, this allows ptrace based debuggers like C++ to work in the container:
	"runArgs": [
		"--cap-add=SYS_PTRACE", //
		"--security-opt",
		"seccomp=unconfined",
		"--privileged"
	],


    "customizations": {
        "vscode": {
            "terminal.integrated.shell.linux":
            [
                "/bin/bash"
            ],

            "settings": {
                "extensions": [
                "ms-vscode.cpptools",
                "ms-vscode.cpptools-extension-pack",
                "ms-vscode.cmake-tools",
                "twxs.cmake",
                "marus25.cortex-debug",
                "mcu-debug.debug-tracker-vscode",
                "ms-azuretools.vscode-docker",
                "cschlosser.doxdocgen",
                "ms-vscode.vscode-embedded-tools",
                "mhutchie.git-graph",
                "ms-vscode.hexeditor",
                "mcu-debug.memory-view"
            ]
            }
        }
    },
	// Add the IDs of extensions you want installed when the container is created.

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "arm-none-eabi-gcc --version",
	//Indicates whether VS Code should stop the container when the VS Code window is closed / shut down.
	"shutdownAction": "stopContainer",
	// Comment out this line to run as root instead.
	//"remoteUser": "user"
}